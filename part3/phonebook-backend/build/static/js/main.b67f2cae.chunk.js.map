{"version":3,"sources":["components/Filter.js","components/Notification.js","components/Person.js","components/Persons.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Filter","props","onChange","handleFilterChange","Notification","message","type","className","Person","person","handlePersonDelete","name","number","onClick","Persons","persons","map","key","id","PersonForm","value","newName","handleNameChange","newNumber","handleNumberChange","handleClick","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","keyword","setKeyword","setMessage","msgType","setMsgType","useEffect","personSerice","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","sameNamePerson","find","newPerson","window","confirm","returnedPerson","p","catch","error","setTimeout","concat","alert","ReactDOM","render","document","getElementById"],"mappings":"mNAUeA,EARA,SAACC,GACd,OACE,8BACE,kDAAuB,2BAAOC,SAAUD,EAAME,wBCSrCC,EAZM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC/B,OAAgB,OAAZD,EACK,KAIP,yBAAKE,UAAWD,GACbD,ICDQG,EANA,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,mBACxB,OACE,2BAAID,EAAOE,KAAX,IAAkBF,EAAOG,OAAzB,IAAiC,4BAAQC,QAASH,GAAjB,YCStBI,EAVC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAASL,EAAyB,EAAzBA,mBAC1B,OACE,oCACGK,EAAQC,KAAI,SAAAP,GAAM,OACjB,kBAAC,EAAD,CAAQQ,IAAKR,EAAOS,GAAIT,OAAQA,EAAQC,mBAAoB,kBAAMA,EAAmBD,EAAOS,YCSrFC,EAdI,SAAClB,GAClB,OACE,8BACE,sCACQ,2BAAOmB,MAAOnB,EAAMoB,QAASnB,SAAUD,EAAMqB,oBAErD,wCAAa,2BAAOF,MAAOnB,EAAMsB,UAAWrB,SAAUD,EAAMuB,sBAC5D,6BACE,4BAAQlB,KAAK,SAASO,QAASZ,EAAMwB,aAArC,U,gBCRFC,EAAU,eAsBD,EApBA,WAEb,OADYC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkBxB,EAfA,SAAAC,GAEb,OADYL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAaxB,EAVA,SAACb,EAAIc,GAElB,OADYL,IAAMO,IAAN,UAAaR,EAAb,YAAwBR,GAAMc,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQxB,EALC,SAAAb,GAEd,OADYS,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BR,IAC5BW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCsGxBK,G,MAlHH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRtB,EADQ,KACCuB,EADD,OAEgBD,mBAAS,IAFzB,mBAERhB,EAFQ,KAECkB,EAFD,OAGoBF,mBAAS,IAH7B,mBAGRd,EAHQ,KAGGiB,EAHH,OAIeH,mBAAS,IAJxB,mBAIRI,EAJQ,KAICC,EAJD,OAKgBL,mBAAS,MALzB,mBAKRhC,EALQ,KAKCsC,EALD,OAMgBN,mBAAS,MANzB,mBAMRO,EANQ,KAMCC,EAND,KAgBhBC,qBARqB,WACnBC,IAEGlB,MAAK,SAAAmB,GACJV,EAAWU,QAIO,IAExB,IAyEMC,EAA4B,KAAZR,EAClB1B,EACAA,EAAQmC,QAAO,SAAAzC,GAAM,OAAIA,EAAOE,KAAKwC,cAAcC,SAASX,MAEhE,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcpC,QAASA,EAASC,KAAMsC,IACtC,kBAAC,EAAD,CAAQzC,mBAjFe,SAACkD,GAC1BX,EAAWW,EAAMC,OAAOlC,UAiFtB,yCACA,kBAAC,EAAD,CACEC,QAASA,EACTE,UAAWA,EACXD,iBAtCmB,SAAC+B,GACxBd,EAAWc,EAAMC,OAAOlC,QAsCpBI,mBAnCqB,SAAC6B,GAC1Bb,EAAaa,EAAMC,OAAOlC,QAmCtBK,YApFc,SAAC4B,GACnBA,EAAME,iBACN,IAAMC,EAAiBzC,EAAQ0C,MAAK,SAAAhD,GAAM,OAAIA,EAAOE,OAASU,KACxDqC,EAAY,CAChB/C,KAAMU,EAAST,OAAQW,GAGrBiC,GACCG,OAAOC,QAAP,UAAkBvC,EAAlB,2EACH0B,EACUS,EAAetC,GAAIwC,GAC1B7B,MAAK,SAAAgC,GACJvB,EAAWvB,EAAQC,KAAI,SAAA8C,GAAC,OAAIA,EAAE5C,KAAO2C,EAAe3C,GAAK4C,EAAID,SAE9DE,OAAM,SAAAC,GACLrB,EAAWqB,EAAMlC,SAASC,KAAKiC,OAC/BnB,EAAW,SACXoB,YAAW,WACTtB,EAAW,QACV,QAGPI,EACUW,GACP7B,MAAK,SAAAgC,GACJvB,EAAWvB,EAAQmD,OAAOL,IAC1BtB,EAAW,IACXC,EAAa,IACbG,EAAW,SAAD,OAAUtB,IACpBwB,EAAW,WACXoB,YAAW,WACTtB,EAAW,QACV,QAEJoB,OAAM,SAAAC,GACLrB,EAAWqB,EAAMlC,SAASC,KAAKiC,OAC/BnB,EAAW,SACXoB,YAAW,WACTtB,EAAW,QACV,WA+CP,uCACA,kBAAC,EAAD,CAAS5B,QAASkC,EAAevC,mBAnCV,SAAAQ,GACzB,IAAMT,EAASM,EAAQ0C,MAAK,SAAAK,GAAC,OAAIA,EAAE5C,KAAOA,KACtCyC,OAAOC,QAAP,iBAAyBnD,EAAOE,KAAhC,OACFoC,EACW7B,GACRW,MAAK,WACJS,EAAWvB,EAAQmC,QAAO,SAAAY,GAAC,OAAIA,EAAE5C,KAAOA,SAEzC6C,OAAM,SAAAC,GACLG,MAAM,eAAD,OACY1D,EAAOE,KADnB,sCAGL2B,EAAWvB,EAAQmC,QAAO,SAAAY,GAAC,OAAIA,EAAE5C,KAAOA,eC3FlDkD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b67f2cae.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <form>\n      <div>filter shown with <input onChange={props.handleFilterChange} /></div>\n    </form>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Person = ({ person, handlePersonDelete }) => {\n  return (\n    <p>{person.name} {person.number} <button onClick={handlePersonDelete}>delete</button></p>\n  )\n}\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, handlePersonDelete }) => {\n  return (\n    <>\n      {persons.map(person =>\n        <Person key={person.id} person={person} handlePersonDelete={() => handlePersonDelete(person.id)} />\n      )}\n    </>\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} />\n      </div>\n      <div>number: <input value={props.newNumber} onChange={props.handleNumberChange} /></div>\n      <div>\n        <button type=\"submit\" onClick={props.handleClick}>add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then(response => response.data)\n}\n\nconst create = newObject => {\n  const req = axios.post(baseUrl, newObject)\n  return req.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const req = axios.put(`${baseUrl}/${id}`, newObject)\n  return req.then(response => response.data)\n}\n\nconst destroy = id => {\n  const req = axios.delete(`${baseUrl}/${id}`)\n  return req.then(response => response.data)\n}\n\nexport default { getAll, create, update, destroy }\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport personSerice from './services/persons'\n\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ keyword, setKeyword] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ msgType, setMsgType ] = useState(null)\n\n  const fetchPersons = () => {\n    personSerice\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }\n\n  useEffect(fetchPersons, [])\n\n  const handleFilterChange = (event) => {\n    setKeyword(event.target.value)\n  }\n\n  const handleClick = (event) => {\n    event.preventDefault()\n    const sameNamePerson = persons.find(person => person.name === newName)\n    const newPerson = {\n      name: newName, number: newNumber\n    }\n\n    if (sameNamePerson\n      && window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      personSerice\n        .update(sameNamePerson.id, newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(p => p.id !== returnedPerson.id ? p : returnedPerson))\n        })\n        .catch(error => {\n          setMessage(error.response.data.error)\n          setMsgType('error')\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    } else {\n      personSerice\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`Added ${newName}`)\n          setMsgType('success')\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setMessage(error.response.data.error)\n          setMsgType('error')\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handlePersonDelete = id => {\n    const person = persons.find(p => p.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personSerice\n        .destroy(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n        })\n        .catch(error => {\n          alert(\n            `the person '${person.name}' was already deleted from server`\n          )\n          setPersons(persons.filter(p => p.id !== id))\n        })\n    }\n  }\n\n  const personsToShow = keyword === ''\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(keyword))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={msgType} />\n      <Filter handleFilterChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleClick={handleClick}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} handlePersonDelete={handlePersonDelete} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}